name: 🧪 Tests & Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: 🔍 Analyze code
      run: flutter analyze
      
    - name: 🧪 Run unit tests
      run: flutter test test/unit/ --reporter=expanded --coverage
      
    - name: 🎨 Run widget tests  
      run: flutter test test/widgets/ --reporter=expanded
      
    - name: 🔗 Run integration tests
      run: flutter test test/integration/ --reporter=expanded
      
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: coverage/lcov.info
        fail_ci_if_error: false
        verbose: true

  widget_tests:
    name: 🎨 Widget Tests (Multiple Platforms)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: 🎨 Run widget tests
      run: flutter test test/widgets/ --reporter=compact

  performance_tests:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: ⚡ Run performance tests
      run: |
        flutter test --reporter=json > test_results.json
        dart test/analyze_performance.dart test_results.json
        
    - name: 📊 Check for slow tests
      run: |
        if grep -q "SLOW_TEST" test_results.json; then
          echo "⚠️ Найдены медленные тесты!"
          exit 1
        fi

  accessibility_tests:
    name: ♿ Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: ♿ Run accessibility tests
      run: flutter test test/accessibility/ --reporter=expanded

  golden_tests:
    name: 🖼️ Golden Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: 🖼️ Run golden tests
      run: flutter test test/golden/ --reporter=expanded --update-goldens
      
    - name: 📤 Upload golden files
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: golden-failures
        path: test/golden/failures/

  test_coverage:
    name: 📊 Test Coverage Analysis
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔧 Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: 📊 Generate coverage report
      run: |
        flutter test --coverage
        dart test/helpers/test_generator.dart > coverage_report.txt
        
    - name: 📈 Check coverage threshold
      run: |
        COVERAGE=$(grep -o '[0-9]*\.[0-9]*%' coverage_report.txt | head -1 | sed 's/%//')
        echo "Current coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "❌ Покрытие тестами слишком низкое: $COVERAGE%"
          echo "Требуется минимум 80%"
          exit 1
        fi
        echo "✅ Покрытие тестами достаточное: $COVERAGE%"
        
    - name: 📤 Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          coverage/
          coverage_report.txt

  test_dependencies:
    name: 🔍 Test Dependencies Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Check for unused test dependencies
      run: |
        echo "🔍 Проверка неиспользуемых зависимостей..."
        # Можно добавить скрипт для проверки неиспользуемых зависимостей
        
    - name: 🔍 Check for missing test files
      run: |
        echo "🔍 Поиск файлов без тестов..."
        dart test/helpers/test_generator.dart --check-missing
        
    - name: 📊 Generate test metrics
      run: |
        echo "📊 Генерация метрик тестирования..."
        find test/ -name "*_test.dart" | wc -l > test_count.txt
        echo "Общее количество тестов: $(cat test_count.txt)"

  # Дополнительная джоба для проверки качества тестов
  test_quality:
    name: 🎯 Test Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Check test naming conventions
      run: |
        echo "🎯 Проверка соглашений по именованию тестов..."
        BAD_NAMES=$(find test/ -name "*.dart" | grep -v "_test.dart$" | grep -v "test_" | grep -v "helpers/" | grep -v "mocks/")
        if [ ! -z "$BAD_NAMES" ]; then
          echo "❌ Найдены файлы с неправильными именами:"
          echo "$BAD_NAMES"
          exit 1
        fi
        echo "✅ Все тестовые файлы правильно именованы"
        
    - name: 🔍 Check test completeness
      run: |
        echo "🔍 Проверка полноты тестов..."
        dart test/helpers/test_generator.dart --analyze-completeness
        
    - name: 📊 Test performance analysis
      run: |
        echo "📊 Анализ производительности тестов..."
        flutter test --reporter=json > test_performance.json
        dart test/analyze_test_performance.dart test_performance.json